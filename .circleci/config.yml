# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: digitaldonkey/circleci-degov:latest
        environment:
          RELEASE_BRANCH: release/7.6.x-dev
          COMPOSER_ALLOW_SUPERUSER: 1
          COMPOSER_MEMORY_LIMIT: -1
          COMPOSER_EXIT_ON_PATCH_FAILURE: 1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      - image: circleci/mysql:5.7-ram
        environment:
          MYSQL_DATABASE: testing
          MYSQL_USER: testing
          MYSQL_PASSWORD: testing

    steps:
      - checkout
#      - run:
#          name: Apache Setup
#          command: |
#            sudo apt-get update
#            sudo apt-get install -y --no-install-recommends libfreetype6-dev libjpeg62-turbo-dev libpng-dev
#            sudo rm -rf /var/lib/apt/lists/*
#            sudo docker-php-ext-configure gd --with-freetype-dir=/usr --with-jpeg-dir=/usr --with-png-dir=/usr
#            sudo docker-php-ext-install -j "$(nproc)" gd
      - run:
          name: Repository Environment Variables for project and LFS
          command: |
              if git ls-remote --exit-code --heads https://digitaldonkey@bitbucket.org/publicplan/degov_project.git "$CIRCLE_BRANCH";
              then
                echo 'export PROJECT_BRANCH="$CIRCLE_BRANCH"' >> $BASH_ENV
              else
                echo 'export PROJECT_BRANCH="$RELEASE_BRANCH"' >> $BASH_ENV
              fi
              if git ls-remote --exit-code --heads https://digitaldonkey@bitbucket.org/publicplan/degov_devel_git_lfs.git "$CIRCLE_BRANCH";
                then
                  echo 'export LFS_BRANCH="$CIRCLE_BRANCH"' >> $BASH_ENV
                else
                  echo 'export LFS_BRANCH="$RELEASE_BRANCH"' >> $BASH_ENV
                fi
                source $BASH_ENV
                echo "PROJECT_BRANCH = $PROJECT_BRANCH"
                echo "LFS_BRANCH = $CIRCLE_BRANCH"
                # Used for caching
                echo "$LFS_BRANCH,$PROJECT_BRANCH,$CIRCLE_BRANCH,$CIRCLE_SHA1" > /tmp/cache--project-setup

      # PROJECT SETUP
      - restore_cache:
          keys:
            - v3-project-dependencies-{{ checksum "/tmp/repositories-in-use" }}
            - v3-project-dependencies
      - run:
          name: Set up Project
          command: |
            composer create-project --remove-vcs --no-progress "degov/degov-project:dev-$PROJECT_BRANCH" --no-install

      # INSTALL PROFILE
      - run:
          name: Composer require deGov
          command: |
            cd degov-project
            composer require --no-progress "degov/degov:dev-$CIRCLE_BRANCH#$CIRCLE_SHA1" degov/degov_devel_git_lfs:dev-$LFS_BRANCH --update-with-all-dependencies
            cd ..

      - save_cache:
          key: v3-project-dependencies-{{ checksum "/tmp/cache--project-setup" }}
          paths:
            - ./degov-project

      - run:
          name: Where are we?
          command: |
            pwd
            ls -al .


#      - restore_cache:
#          keys:
#            - node-v1-{{ checksum "package.json" }}
#            - node-v1-
##      - run: yarn install
#      - save_cache:
#          key: node-v1-{{ checksum "package.json" }}
#          paths:
#            - node_modules

      # prepare the database
#      - run: touch storage/testing.sqlite
#      - run: php artisan migrate --env=testing --database=sqlite_testing --force

      # run tests with phpunit or codecept
      #- run: ./vendor/bin/phpunit
#      - run: ./vendor/bin/codecept build
#      - run: ./vendor/bin/codecept run
dependencies:
  cache_directories:
    - ~/.composer/cache
