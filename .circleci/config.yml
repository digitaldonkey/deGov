# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
x-baseimage: &baseimage
  - image: digitaldonkey/circleci-degov:0.0.7
    environment:
      RELEASE_BRANCH: release/7.6.x-dev
      COMPOSER_ALLOW_SUPERUSER: 1
      COMPOSER_MEMORY_LIMIT: -1
      COMPOSER_EXIT_ON_PATCH_FAILURE: 1
      CIRCLECI_CACHE_TAG: v1

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # Using the RAM variation mitigates I/O contention
    # for database intensive operations.
x-dbimage: &dbimage
  - image: circleci/mysql:5.7-ram
    environment:
      MYSQL_DATABASE: testing
      MYSQL_USER: testing
      MYSQL_PASSWORD: testing

version: 2
jobs:
  build:
    docker:
      - <<: *baseimage
    steps:
      - checkout:
          path: /home/circleci/project/docroot/profiles/contrib/
      - run:
          name: Verify Checkout
          command: |
            echo "###"
            echo "working_directory: $(pwd)"
            echo "###"
            echo "# ls -al docroot/profiles/contrib/.circleci/"
            sudo ls -al docroot/profiles/contrib/.circleci/
            echo "###"

### Prepare git uses the code from "- checkout" step without cloning repository.
#      - run:
#          name: Prepare Cloning
#          command: |
#            mkdir -p ~/.ssh
#            echo "github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
#            bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
#            " >> ~/.ssh/known_hosts
#            (umask 077; touch ~/.ssh/id_rsa)
#            chmod 0600 ~/.ssh/id_rsa
#            (cat <<EOF > ~/.ssh/id_rsa
#            $CHECKOUT_KEY
#            EOF
#            )
#            # use git+ssh instead of https
#            git config --global url."ssh://git@github.com".insteadOf "https://github.com" || true
#            git config --global gc.auto 0 || true

#      - save_cache:
#          key: project-dependencies-checkout-config-{{ checksum "docroot/profiles/contrib/.circleci/config.yml" }}
#          paths:
#            - .

      - run:
          name: Repository Environment Variables for project and LFS
          command: |
              mkdir -p /tmp/ci-cache
              if git ls-remote --exit-code --heads https://digitaldonkey@bitbucket.org/publicplan/degov_project.git "$CIRCLE_BRANCH";
              then
                echo 'export PROJECT_BRANCH="$CIRCLE_BRANCH"' >> $BASH_ENV
              else
                echo 'export PROJECT_BRANCH="$RELEASE_BRANCH"' >> $BASH_ENV
              fi
              if git ls-remote --exit-code --heads https://digitaldonkey@bitbucket.org/publicplan/degov_devel_git_lfs.git "$CIRCLE_BRANCH";
                then
                  echo 'export LFS_BRANCH="$CIRCLE_BRANCH"' >> $BASH_ENV
                else
                  echo 'export LFS_BRANCH="$RELEASE_BRANCH"' >> $BASH_ENV
                fi
                source $BASH_ENV
                echo "PROJECT_BRANCH = $PROJECT_BRANCH"
                echo "LFS_BRANCH = $LFS_BRANCH"
                # Used for caching
                echo "$PROJECT_BRANCH, $LFS_BRANCH, $CIRCLECI_CACHE_TAG," > /tmp/ci-cache/project-setup
                echo "$CIRCLE_SHA1, $CIRCLE_BRANCH, $PROJECT_BRANCH, $LFS_BRANCH, $CIRCLECI_CACHE_TAG" > /tmp/ci-cache/composer

      - restore_cache:
         keys:
           - project-dependencies-composer-{{ checksum "/tmp/ci-cache/composer" }}-{{ checksum "docroot/profiles/contrib/.circleci/config.yml" }}--{{ checksum "docroot/profiles/contrib/composer.json" }}
           - project-dependencies-project-setup-{{ checksum "/tmp/ci-cache/project-setup" }}-v2
           - project-dependencies-checkout-config-{{ checksum "docroot/profiles/contrib/.circleci/config.yml" }}

      # PROJECT SETUP
      - run:
          name: Set up Project
          command: | # if not in cache
            if [ ! -f ./composer.json ]; then
              rm -rf ./*  # removing default -checkout as we use composer, but we keep circleci known_hosts setup.
              composer create-project --remove-vcs "degov/degov-project:dev-$PROJECT_BRANCH" --no-install --ansi --no-progress .
            fi

      - save_cache:
          key: project-dependencies-project-setup-{{ checksum "/tmp/ci-cache/project-setup" }}-v2
          paths:
           - .
           - /tmp/ci-cache

      # INSTALL PROFILE
      - run:
          name: Composer require deGov
          command: | # if not in cache
            if [ ! -f /tmp/project-setup-done ]; then
              rm composer.lock
              composer require "degov/degov:dev-$CIRCLE_BRANCH#$CIRCLE_SHA1" degov/degov_devel_git_lfs:dev-$LFS_BRANCH --update-with-all-dependencies --ansi --no-progress
              cp composer.lock /tmp/ci-cache/project-setup-done
            fi

      # TODO
      # composer update --lock ??
      # For propper caching we would require a solution invloving composer.lock from commit which is not committed.
      # We should ensure to have everything updated at build time. ??
      # Probably
      # - check the lock file and compare with /tmp/ci-cache/project-setup-done
      #   - if lock differs then update project and "project-setup-done", use cache somehow.
      # - run:
      #     name: Composer update composer.lock
      #     command: |
      #       composer update --lock --ansi --no-progress
      #       cat composer.lock
      #       cat md5sum composer.lock

      - run:
          name: Set up Drupal config & directories
          command: |
            if [ ! -d docroot/sites/default/files/private/ ]; then
              mkdir -p docroot/sites/default/files/private/
              mkdir docroot/sites/default/files/translations/
              chmod 777 -R docroot/sites/default/files/
              tee <<EOF > docroot/sites/default/settings.php

            \$settings["file_private_path"] = "sites/default/files/private";
            \$settings["file_public_path"] = "sites/default/files";
            \$config["system.file"]["path"]["temporary"] = "/tmp";
            \$settings["trusted_host_patterns"] = ["^127.0.0.1$","^localhost$","^host.docker.internal$"];
            \$config["locale.settings"]["translation"]["path"] = "sites/default/files/translations";
            \$config["swiftmailer.transport"]["transport"] = "spool";
            \$config["swiftmailer.transport"]["spool_directory"] = "/tmp/swiftmailer-spool";

            EOF
            fi
            cat docroot/sites/default/settings.php

      - save_cache:
          key: project-dependencies-composer-{{ checksum "/tmp/ci-cache/composer" }}-{{ checksum "docroot/profiles/contrib/degov/.circleci/config.yml" }}
          paths:
            - .
          # TODO is paths ok?


      - run:
          name: Configure & start Apache
          command: |
            sudo cp docroot/profiles/contrib/degov/.circleci/vhost.conf /etc/apache2/sites-available/project.conf
            if [ ! -f /etc/apache2/sites-enabled/project.conf ]; then
              sudo a2ensite project
            fi
            sudo service apache2 start

      - save_cache:
          key: project-dependencies-apache-vhost-{{ checksum "docroot/profiles/contrib/degov/.circleci/vhost.conf" }}-{{ checksum "docroot/profiles/contrib/degov/.circleci/config.yml" }}
          paths:
            - .

#  TODO VERIFY ALL CAHCES...
#  Must be restored in right order on top
#           - project-dependencies-apache-vhost-{{ checksum "docroot/profiles/contrib/degov/.circleci/vhost.conf" }}-{{ checksum "docroot/profiles/contrib/degov/.circleci/config.yml" }}
#           - project-dependencies-composer-{{ checksum "/tmp/ci-cache/composer" }}-{{ checksum "docroot/profiles/contrib/.circleci/config.yml" }}--{{ checksum "docroot/profiles/contrib/degov/composer.json" }}
#           - project-dependencies-project-setup-{{ checksum "/tmp/ci-cache/project-setup" }}-v2
#           - project-dependencies-checkout-config-{{ checksum "docroot/profiles/contrib/.circleci/config.yml" }}
#


      # TODO THIS REQUIRES OPTIMISATION
      - persist_to_workspace:
          root: /
          paths:
            - home/circleci
            - etc/apache2/sites-available
            - etc/apache2/sites-enabled
            - tmp/ci-cache

  test1:
    docker:
     - <<: *baseimage
     - <<: *dbimage
    steps:
      - attach_workspace:
          at: home/circleci
      - attach_workspace:
          at: etc/apache2/sites-available
      - attach_workspace:
          at: etc/apache2/sites-enabled
      - attach_workspace:
          at: tmp/ci-cache

      - run:
          name: Start Apache
          command: |
            sudo service apache2 start

      - run:
          name: Verify Checkout
          command: |
            echo "###"
            echo "working_directory: $(pwd)"
            echo "###"
            cat docroot/sites/default/settings.php
            find . | grep \\.git$


workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      - test1:
          requires:
            - build


dependencies:
  cache_directories:
    - ~/.composer/cache
