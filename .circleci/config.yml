# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: digitaldonkey/circleci-degov:0.0.7
        environment:
          RELEASE_BRANCH: release/7.6.x-dev
          COMPOSER_ALLOW_SUPERUSER: 1
          COMPOSER_MEMORY_LIMIT: -1
          COMPOSER_EXIT_ON_PATCH_FAILURE: 1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      - image: circleci/mysql:5.7-ram
        environment:
          MYSQL_DATABASE: testing
          MYSQL_USER: testing
          MYSQL_PASSWORD: testing

    steps:

      - checkout:
          path: /home/circleci/project/docroot/profiles/contrib/

      - run:
          name: Verify Checkout
          command: |
            echo "###"
            echo "working_directory: $(pwd)"
            echo "###"
            echo "# ls -al /home/circleci/project/docroot/profiles/contrib/degov/.circleci/"
            ls -al ./docroot/profiles/contrib/degov/.circleci/
            echo "###"

### Prepare git uses the code from "- checkout" step without cloning repository.
#      - run:
#          name: Prepare Cloning
#          command: |
#            mkdir -p ~/.ssh
#            echo "github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
#            bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
#            " >> ~/.ssh/known_hosts
#            (umask 077; touch ~/.ssh/id_rsa)
#            chmod 0600 ~/.ssh/id_rsa
#            (cat <<EOF > ~/.ssh/id_rsa
#            $CHECKOUT_KEY
#            EOF
#            )
#            # use git+ssh instead of https
#            git config --global url."ssh://git@github.com".insteadOf "https://github.com" || true
#            git config --global gc.auto 0 || true

      - save_cache:
          key: project-dependencies-apache-vhost-{{ checksum "/home/circleci/project/docroot/profiles/contrib/degov/.circleci/vhost.conf" }}-{{ checksum "/home/circleci/project/docroot/profiles/contrib/.circleci/config.yml" }}
          paths:
            - .
            - ./.ssh

      - run:
          name: Repository Environment Variables for project and LFS
          command: |
              if git ls-remote --exit-code --heads https://digitaldonkey@bitbucket.org/publicplan/degov_project.git "$CIRCLE_BRANCH";
              then
                echo 'export PROJECT_BRANCH="$CIRCLE_BRANCH"' >> $BASH_ENV
              else
                echo 'export PROJECT_BRANCH="$RELEASE_BRANCH"' >> $BASH_ENV
              fi
              if git ls-remote --exit-code --heads https://digitaldonkey@bitbucket.org/publicplan/degov_devel_git_lfs.git "$CIRCLE_BRANCH";
                then
                  echo 'export LFS_BRANCH="$CIRCLE_BRANCH"' >> $BASH_ENV
                else
                  echo 'export LFS_BRANCH="$RELEASE_BRANCH"' >> $BASH_ENV
                fi
                source $BASH_ENV
                echo "PROJECT_BRANCH = $PROJECT_BRANCH"
                echo "LFS_BRANCH = $LFS_BRANCH"
                # Used for caching
                echo "$PROJECT_BRANCH, $LFS_BRANCH, $CIRCLECI_CAHCHE_TAG," > /tmp/cache--project-setup
                echo " $CIRCLE_SHA1, $CIRCLE_BRANCH, $PROJECT_BRANCH, $LFS_BRANCH, $CIRCLECI_CAHCHE_TAG" > /tmp/cache--composer

#      - restore_cache:
#          keys:
#            - project-dependencies-apache-vhost-{{ checksum "/home/circleci/project/docroot/profiles/contrib/.circleci/vhost.conf" }}-{{ checksum "/home/circleci/project/docroot/profiles/contrib/.circleci/config.yml" }}
#            - project-dependencies-composer-{{ checksum "/tmp/cache--composer" }}-{{ checksum "/home/circleci/project/docroot/profiles/contrib/.circleci/config.yml" }}
#            - project-dependencies-project-setup-{{ checksum "/tmp/cache--project-setup" }}-{{ checksum "/home/circleci/project/docroot/profiles/contrib/.circleci/config.yml" }}
#            - project-dependencies-checkout-config-{{ checksum "/home/circleci/project/docroot/profiles/contrib/.circleci/config.yml" }}

      # PROJECT SETUP
      - run:
          name: Set up Project
          command: |
            rm -rf ./*  # removing default -checkout as we use composer, but we keep circleci known_hosts setup.
            composer create-project --remove-vcs "degov/degov-project:dev-$PROJECT_BRANCH" --no-install .

      - save_cache:
          key: project-dependencies-project-setup-{{ checksum "/tmp/cache--project-setup" }}-{{ checksum "/home/circleci/project/docroot/profiles/contrib/.circleci/config.yml" }}
          paths:
            - .

      # INSTALL PROFILE
      - run:
          name: Composer require deGov
          command: |
            composer require "degov/degov:dev-$CIRCLE_BRANCH#$CIRCLE_SHA1" degov/degov_devel_git_lfs:dev-$LFS_BRANCH --update-with-all-dependencies

      - save_cache:
          key: project-dependencies-composer-{{ checksum "/tmp/cache--composer" }}-{{ checksum "/home/circleci/project/docroot/profiles/contrib/.circleci/config.yml" }}
          paths:
            - .

      - run:
          name: Configure & start Apache
          command: |
            sudo cp ./docroot/profiles/contrib/degov/.circleci/vhost.conf /etc/apache2/sites-available/project.conf
            sudo a2ensite project
            sudo service apache2 start

      - save_cache:
          key: project-dependencies-apache-vhost-{{ checksum "/home/circleci/project/docroot/profiles/contrib/degov/.circleci/vhost.conf" }}-{{ checksum "/home/circleci/project/docroot/profiles/contrib/.circleci/config.yml" }}
          paths:
            - .

      - run:
          name: Where are we?
          command: |
            echo "working_directory: $(pwd)"
            echo "###"
            ls -al .
            echo "###"


#      - restore_cache:
#          keys:
#            - node-v1-{{ checksum "package.json" }}
#            - node-v1-
##      - run: yarn install
#      - save_cache:
#          key: node-v1-{{ checksum "package.json" }}
#          paths:
#            - node_modules

      # prepare the database
#      - run: touch storage/testing.sqlite
#      - run: php artisan migrate --env=testing --database=sqlite_testing --force

      # run tests with phpunit or codecept
      #- run: ./vendor/bin/phpunit
#      - run: ./vendor/bin/codecept build
#      - run: ./vendor/bin/codecept run

dependencies:
  cache_directories:
    - ~/.composer/cache
