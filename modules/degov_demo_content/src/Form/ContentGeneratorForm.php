<?php

namespace Drupal\degov_demo_content\Form;

use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;
use Drupal\degov_demo_content\Factory\MediaFactory;
use Drupal\degov_demo_content\Factory\NodeFactory;
use Symfony\Component\DependencyInjection\ContainerInterface;

/**
 * Class ContentGeneratorForm.
 */
class ContentGeneratorForm extends FormBase {

  /**
   * Drupal\degov_demo_content\Factory\MediaFactory definition.
   *
   * @var \Drupal\degov_demo_content\Factory\MediaFactory
   */
  protected $mediaFactory;

  /**
   * Drupal\degov_demo_content\Factory\NodeFactory definition.
   *
   * @var \Drupal\degov_demo_content\Factory\NodeFactory
   */
  protected $nodeFactory;

  /**
   * Constructs a new ContentGeneratorForm object.
   */
  public function __construct(
    MediaFactory $media_factory,
    NodeFactory $node_factory
  ) {
    $this->mediaFactory = $media_factory;
    $this->nodeFactory = $node_factory;
  }

  public static function create(ContainerInterface $container) {
    return new static(
      $container->get('degov_demo_content.media_generator'),
      $container->get('degov_demo_content.node_generator')
    );
  }

  /**
   * {@inheritdoc}
   */
  public function getFormId() {
    return 'content_generator_form';
  }

  /**
   * {@inheritdoc}
   */
  public function buildForm(array $form, FormStateInterface $form_state) {
    $form['submit_description'] = [
      '#markup' => sprintf('<p>%s</p>', $this->t('All entities generated by this module will be deleted and generated anew. Any changes you made to these entities will be lost.')),
    ];
    $form['submit_reset'] = [
      '#type'  => 'submit',
      '#value' => $this->t('Reset demo content'),
    ];

    return $form;
  }

  /**
   * {@inheritdoc}
   */
  public function submitForm(array &$form, FormStateInterface $form_state) {
    $this->mediaFactory->resetContent();
    $this->nodeFactory->resetContent();
  }

}
