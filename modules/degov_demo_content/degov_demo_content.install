<?php

/**
 * @file
 * Install- and update hooks for the module.
 */

use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_install().
 */
function degov_demo_content_install() {
  $files_save_path = DEGOV_DEMO_CONTENT_FILES_SAVE_PATH;
  file_prepare_directory($files_save_path, FILE_CREATE_DIRECTORY);
  $tag_term = Term::create([
    'name' => DEGOV_DEMO_CONTENT_TAG_NAME,
    'vid'  => DEGOV_DEMO_CONTENT_TAGS_VOCABULARY_NAME,
  ]);
  $tag_term->save();
  $copyright_term = Term::create([
    'name' => DEGOV_DEMO_CONTENT_TAG_NAME,
    'vid'  => DEGOV_DEMO_CONTENT_COPYRIGHT_VOCABULARY_NAME,
  ]);
  $copyright_term->save();
  \Drupal::service('degov_demo_content.media_generator')->generateContent();
  \Drupal::service('degov_demo_content.node_generator')->generateContent();
  \Drupal::service('degov_demo_content.menu_item_generator')->generateContent();
}

/**
 * Implements hook_uninstall().
 */
function degov_demo_content_uninstall() {
  \Drupal::service('degov_demo_content.node_generator')->deleteContent();
  \Drupal::service('degov_demo_content.media_generator')->deleteContent();
  \Drupal::service('degov_demo_content.menu_item_generator')->deleteContent();
  $terms = \Drupal::entityTypeManager()
    ->getStorage('taxonomy_term')
    ->loadByProperties([
      'name' => DEGOV_DEMO_CONTENT_TAG_NAME,
    ]);
  foreach ($terms as $term) {
    $term->delete();
  }
  $filesystem = \Drupal::service('file_system');
  file_unmanaged_delete_recursive($filesystem->realpath(DEGOV_DEMO_CONTENT_FILES_SAVE_PATH));
}
