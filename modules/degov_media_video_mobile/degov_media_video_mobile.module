<?php

/**
 * @file
 * Responsive Video media module.
 */

use Drupal\degov_common\Common;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_preprocess().
 */
function degov_media_video_mobile_preprocess(&$variables, $hook, &$info) {
  // Add template suggestions and libraries implemented in this module.
  Common::addThemeSuggestions($variables, $hook, $info, [
    'module_name'       => 'degov_media_video_mobile',
    'entity_type'       => 'media',
    'entity_bundles'    => ['video_mobile'],
    'entity_view_modes' => [
      'usage',
      'preview',
      'search',
      'embedded',
      'reference',
      'full',
      'preview_wide',
    ],
  ]);
}

/**
 * Implements hook_preprocess_HOOK().
 */
function degov_media_video_mobile_preprocess_media__video_mobile(&$variables) {
  $javascriptData = [];
  $variables['#attached']['library'][] = 'degov_media_video_mobile/check_cellular';
  /* @var \Drupal\media\Entity\Media $media */
  $media = $variables['elements']['#media'];

  $variables['video_url'] = $media->url();
  $variables['video_attributes'] = new Attribute([
    'id'       => 'video-upload-' . $media->id(),
    'preload'  => 'metadata',
    'controls' => 'controls',
  ]);

  $javascriptData['id'] = 'video-upload-' . $media->id();

  // Check if the download of the video is allowed by media settings.
  $download_is_allowed = FALSE;
  if ($media->hasField('field_allow_download') && !$media->get('field_allow_download')->isEmpty()) {
    $download_is_allowed = $media->get('field_allow_download')->value ? TRUE : FALSE;
  }

  if (!$media->get('field_mobile_video_mobile_mp4')->isEmpty()) {
    /* @var \Drupal\file\Entity\File $file */
    $file = $media->field_mobile_video_mobile_mp4->entity;
    if (!empty($file)) {
      $javascriptData['video_mobile'] = $variables['video_mobile_mp4'];
      // Add the download link only to full view mode.
      if (in_array($variables['elements']['#view_mode'], ['full', 'default'])) {
        // If allowed let's prepare the links.
        if ($download_is_allowed) {
          $variables['content']['download_mp4'] = degov_common_file_download_render_array($file);
        }
      }
      $file_url = file_create_url($file->getFileUri());
      $variables['video_mobile_mp4'] = $file_url;
      $variables['video_attributes']->setAttribute('src', $variables['video_mobile_mp4']);
    }
  }

  if (!$media->get('field_video_mobile_mp4')->isEmpty()) {
    /* @var \Drupal\file\Entity\File $file */
    $file = $media->field_video_mobile_mp4->entity;
    if (!empty($file)) {
      $file_url = file_create_url($file->getFileUri());
      $variables['video_mp4'] = $file_url;
      $variables['video_attributes']->setAttribute('src', $variables['video_mp4']);
      $javascriptData['files']['video_default'] = $variables['video_mp4'];
      $variables['video_qualities'][$file_url] = $media->get('field_video_mobile_mp4')->getFieldDefinition()->getLabel();
      // Add the download link only to full view mode.
      if (in_array($variables['elements']['#view_mode'], ['full', 'default'])) {
        // If allowed let's prepare the links.
        if ($download_is_allowed) {
          $variables['content']['download_mp4'] = degov_common_file_download_render_array($file);
        }
      }
    }
  }
  $variables['#attached']['drupalSettings']['degov_media_video_mobile']['checkCellular'] = $javascriptData;

  if (!$media->get('field_hdready_video_mobile_mp4')->isEmpty()) {
    /* @var \Drupal\file\Entity\File $file */
    $file = $media->field_hdready_video_mobile_mp4->entity;
    if (!empty($file)) {
      $file_url = file_create_url($file->getFileUri());
      $variables['video_hdready_mp4'] = $file_url;
    }
  }

  if (!$media->get('field_fullhd_video_mobile_mp4')->isEmpty()) {
    /* @var \Drupal\file\Entity\File $file */
    $file = $media->field_fullhd_video_mobile_mp4->entity;
    if (!empty($file)) {
      $file_url = file_create_url($file->getFileUri());
      $variables['video_fullhd_mp4'] = $file_url;
    }
  }

  if (!$media->get('field_ultrahd4k_video_mobile_mp4')->isEmpty()) {
    /* @var \Drupal\file\Entity\File $file */
    $file = $media->field_ultrahd4k_video_mobile_mp4->entity;
    if (!empty($file)) {
      $file_url = file_create_url($file->getFileUri());
      $variables['video_ultrahd4k_mp4'] = $file_url;
    }
  }
  /* @var \Drupal\media\Entity\Media $poster */
  $image = $media->field_video_mobile_preview->entity;
  if (!empty($image)) {
    $file = $image->image->entity;
    if (!empty($file)) {
      $variables['video_attributes']['poster'] = file_create_url($file->getFileUri());
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function degov_media_video_mobile_media_presave(EntityInterface $entity) {
  $bundle = $entity->bundle();
  if ($bundle == 'video_mobile') {
    /*
     * Check if the field for duration is enabled for the media bundle and
     * that it is empty.
     * There is no need to check the duration again and again if it is
     * already set.
     */
    if ($entity->hasField('field_media_duration') && $entity->get('field_media_duration')->isEmpty()) {
      /** @var \Drupal\degov_common\VideoUtils $videoUtils */
      $videoUtils = \Drupal::service('degov_common.video_utils');
      $duration = $videoUtils->getVideoDuration($entity);
      $entity->set('field_media_duration', [0 => ['value' => $duration]]);
    }
  }
}

