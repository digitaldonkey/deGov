<?php

use Drupal\file\Entity\File;
use Drupal\degov_common\Common;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_preprocess().
 */
function degov_media_video_mobile_preprocess(&$variables, $hook, &$info) {
  // Add template suggestions and libraries implemented in this module.
  Common::addThemeSuggestions($variables, $hook, $info, [
    'module_name' => 'degov_media_video_mobile',
    'entity_type' => 'media',
    'entity_bundles' => ['video_mobile'],
    'entity_view_modes' => [
      'usage',
      'preview',
      'search',
      'embedded',
      'reference',
      'full',
      'preview_wide',
    ],
  ]);
}


/**
 * Implements hook_preprocess_HOOK().
 */
function degov_media_video_mobile_preprocess_media__video_mobile(&$variables) {
  $javascriptData = [];
  $variables['#attached']['library'][] = 'degov_media_video_mobile/check_cellular';
  /* @var \Drupal\media\Entity\Media $media */
  $media = $variables['elements']['#media'];

  $variables['video_url'] = $media->url();
  $variables['video_attributes'] = new Attribute([
    'id' => 'video-upload-' . $media->id(),
    'preload' => 'metadata',
    'controls' => 'controls',
  ]);

  $javascriptData['id'] = 'video-upload-' . $media->id();

  // Check if the download of the video is allowed by media settings.
  $download_is_allowed = FALSE;
  if ($media->hasField('field_allow_download') && !$media->get('field_allow_download')->isEmpty()) {
    $download_is_allowed = $media->get('field_allow_download')->value ? TRUE : FALSE;
  }
  if (!$media->get('field_mobile_video_mobile_mp4')->isEmpty()) {
    /* @var \Drupal\file\Entity\File $file */
    $file = $media->field_mobile_video_mobile_mp4->entity;
    if (!empty($file)) {
      $variables['video_mobile_mp4'] = file_create_url($file->getFileUri());
      $variables['video_attributes']->setAttribute('src' , $variables['video_mobile_mp4']);
      $javascriptData['video_mobile'] = $variables['video_mobile_mp4'];
      // Add the download link only to full view mode.
      if (in_array($variables['elements']['#view_mode'], ['full', 'default'])) {
        // If allowed let's prepare the links.
        if ($download_is_allowed) {
          $variables['content']['download_mp4'] = degov_common_file_download_render_array($file);
        }
      }
    }
  }
  if (!$media->get('field_video_mobile_mp4')->isEmpty()) {
    /* @var \Drupal\file\Entity\File $file */
    $file = $media->field_video_mobile_mp4->entity;
    if (!empty($file)) {
      $variables['video_mp4'] = file_create_url($file->getFileUri());
      $variables['video_attributes']->setAttribute('src', $variables['video_mp4']);
      $javascriptData['video_default'] = $variables['video_mp4'];
      // Add the download link only to full view mode.
      if (in_array($variables['elements']['#view_mode'], ['full', 'default'])) {
        // If allowed let's prepare the links.
        if ($download_is_allowed) {
          $variables['content']['download_mp4'] = degov_common_file_download_render_array($file);
        }
      }
    }
  }
  $variables['#attached']['drupalSettings']['degov_media_video_mobile']['checkCellular'] = $javascriptData;

  /* @var \Drupal\media\Entity\Media $poster */
  $image = $media->field_video_mobile_preview->entity;
  if (!empty($image)) {
    $file = $image->image->entity;
    if (!empty($file)) {
      $variables['video_attributes']['poster'] = file_create_url($file->getFileUri());
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function degov_media_video_mobile_media_presave(EntityInterface $entity) {
  $bundle = $entity->bundle();
  if ($bundle == 'video_mobile') {
    // Check if the field for duration is enabled for the media bundle and that it is empty.
    // There is no need to check the duration again and again if it is already set.
    if ($entity->hasField('field_media_duration') && $entity->get('field_media_duration')->isEmpty()) {
      /** @var \Drupal\degov_common\VideoUtils $videoUtils */
      $videoUtils = \Drupal::service('degov_common.video_utils');
      $duration = $videoUtils->getVideoDuration($entity);
      $entity->set('field_media_duration', [0 => ['value' => $duration]]);
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function degov_media_video_mobile_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if(\in_array($form_id, ['media_video_mobile_add_form', 'media_video_mobile_edit_form'])) {
    $form['#validate'][] = 'degov_media_video_mobile_validate_video_specs';
  }
}

function degov_media_video_mobile_validate_video_specs(&$form, FormStateInterface $form_state) {
  $video_fields = [
    'field_fullhd_video_mobile_mp4',
    'field_hdready_video_mobile_mp4',
    'field_mobile_video_mobile_mp4',
    'field_ultrahd4k_video_mobile_mp4',
    'field_video_mobile_mp4',
  ];

  // Iterate over video fields
  foreach($video_fields as $field_name) {
    $value = $form_state->getValue($field_name);
    if(!empty($value[0]['fids'][0])) {
      // Get uploaded file
      $uploaded_file = File::load($value[0]['fids'][0]);
      $uploaded_file_path = \Drupal::service('file_system')->realpath($uploaded_file->getFileUri());
      // Get info on file
      $file_info = \Drupal::service('degov_common.video_utils')->getFileInfo($uploaded_file_path);
      error_log('validate');
      // Check file type
      if(empty($file_info['fileformat'])) {
        \Drupal::service('messenger')->addMessage('File format!');
      }
      if($file_info['fileformat'] !== 'mp4') {
        \Drupal::service('messenger')->addMessage('File format!');
      }
      // Check file pixel dimensions
      \Drupal::service('messenger')->addMessage(print_r($file_info['video'], 1));
      // Check file aspect ratio
      \Drupal::service('messenger')->addMessage(print_r($file_info['video'], 1));
      // Check file codec
      \Drupal::service('messenger')->addMessage($file_info['video']['fourcc']);
    }
  }
  $form_state->setError($form, 'FNA');
}