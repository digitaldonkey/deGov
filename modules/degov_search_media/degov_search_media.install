<?php

use Drupal\facets\Entity\Facet;

/**
 * Implements hook_install().
 */
function degov_search_media_install() {
  // Flush plugin caches so our facets will be shown.
  \Drupal::service('plugin.cache_clearer')->clearCachedDefinitions();
}

/**
 * Implements hook_update_dependencies
 */
function degov_search_media_update_dependencies() {
  $dependencies['degov_search_media'][8007] = [
    'degov_media_overrides' => 8001,
  ];

  return $dependencies;
}

/**
 * Add fields publish date to field sort.
 */
function degov_search_media_update_8007() {
  /**
   * @var $updater \Drupal\degov_common\DegovModuleUpdater
   */
  $updater = \Drupal::service('degov_config.module_updater');
  if(\Drupal::config('facets.facet.search_media_publish_date')->get() === null) {
    $updater->applyUpdates('degov_search_media', '8007');
  }
  $updater->reImport('views.view.search_media', 'degov_search_media', 'install');
  $updater->reImport('search_api.index.search_media', 'degov_search_media', 'install');

  foreach ([
    'search_media_changed',
    'search_media_published_date',
  ] as $facetName) {
    $facet = Facet::load($facetName);
    if ($facet) {
      $facet->delete();
    }
  }
}

/**
 * Add path /mediathek to block media_publish_date.
 */
function degov_search_media_update_8008() {
  /**
   * @var $updater \Drupal\degov_common\DegovModuleUpdater
   */
  $updater = \Drupal::service('degov_config.module_updater');
  $updater->applyUpdates('degov_search_media', '8008');
}

/**
 * deGov Update 5.1.0 - Apply the updated media_publish_date block visibility
 */
function degov_search_media_update_850100() {
  // Apply updates for workflows
  \Drupal::service('degov_config.module_updater')
    ->applyUpdates('degov_search_media', '8008');
}

/**
 * deGov Update 6.0.0 - Remove the "Ignore characters" filter from the media bundle field
 */
function degov_search_media_update_860000() {
  $config = \Drupal::configFactory()->getEditable('search_api.index.search_media');
  $ignoreCharacterFieldsSettings = $config->get('processor_settings.ignore_character.fields');

  if(!empty($ignoreCharacterFieldsSettings)) {
    $unsetKey = array_search('bundle', $ignoreCharacterFieldsSettings, FALSE);
    if($unsetKey !== FALSE) {
      unset($ignoreCharacterFieldsSettings[$unsetKey]);
      $config->set('processor_settings.ignore_character.fields', $ignoreCharacterFieldsSettings)->save();
      return t('The Search API configuration for the media index has been updated. Please perform a reindex!');
    }
  }
}