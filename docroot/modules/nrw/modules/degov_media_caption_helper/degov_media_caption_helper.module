<?php

/**
 * Implements hook_preprocess().
 */
function degov_media_caption_helper_preprocess(&$variables, $hook) {
  if ($hook == 'media') {
    // check if the media is referenced from another entity
    if (!empty($variables['elements']['#media']->_referringItem)) {
      $type = $variables['elements']['#media']->bundle();
      // we only preprocess here image and video media entities
      if (!in_array($type, ['image', 'video'])) {
        return;
      }
      // preprocess field
      $caption_field = 'field_image_caption';
      if ($type == 'video') {
        $caption_field = 'field_video_caption';
      }
      // add url contexts to cache
      $variables['#cache']['contexts'][] = 'url.path';
      $variables['elements']['#cache']['contexts'][] = 'url.path';
      $referencingEntity = $variables['elements']['#media']->_referringItem->getEntity();
      if ($referencingEntity instanceof \Drupal\Core\Entity\ContentEntityInterface) {
        // add cache keys and tags, so the media cache depend on the referencing entity
        $variables['elements']['#cache']['keys'][] = $referencingEntity->getEntityTypeId();
        $variables['elements']['#cache']['keys'][] = $referencingEntity->id();
        $variables['elements']['#cache']['tags'][] = $referencingEntity->getEntityTypeId().':'.$referencingEntity->id();
        $variables['elements']['#cache']['tags'][] = $referencingEntity->getEntityTypeId().'_view';
        // if referencing entity has overriden caption use it instead
        if ($referencingEntity->hasField('field_override_caption') && !$referencingEntity->get('field_override_caption')->isEmpty()) {
          $variables['content'][$caption_field] = $referencingEntity->get('field_override_caption')->view('full');
        }
      }
    }
  }
  if (in_array($hook, ['node', 'paragraph'])) {
    // unset this field override caption because we don't need in parent entity display
    if (!empty($variables['content']['field_override_caption'])) {
      unset($variables['content']['field_override_caption']);
    }
  }
}