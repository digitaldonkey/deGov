<?php

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\degov_common\DegovOverride;
use Drupal\degov_common\Plugin\views\filter\DegovBundle;
use Drupal\media_entity\MediaInterface;
use Drupal\node\NodeInterface;

/**
 * Implements hook_views_plugins_filter_alter().
 */
function degov_common_views_plugins_filter_alter(array &$plugins) {
  DegovOverride::pluginClass($plugins['bundle'], DegovBundle::class);
}

/**
 * Set degov_common module to run the last on views_plugins_filter_alter.
 * @param $implementations
 * @param $hook
 */
function degov_common_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'views_plugins_filter_alter') {
    // Move my_module_form_alter() to the end of the list.
    // \Drupal::moduleHandler()->getImplementations()
    // iterates through $implementations with a foreach loop which PHP iterates
    // in the order that the items were added, so to move an item to the end of
    // the array, we remove it and then add it.
    $group = $implementations['degov_common'];
    unset($implementations['degov_common']);
    $implementations['degov_common'] = $group;
  }
}

/**
 * Implements hook_preprocess_node().
 */
function degov_common_preprocess_node(&$variables) {
  /** @var \Drupal\node\NodeInterface $node */
  $node = $variables['node'];
  // Remove the right sidebar paragraph in case no content exists.
  if ($node->hasField('field_sidebar_right_paragraphs') && !empty($variables['content']['field_sidebar_right_paragraphs'])) {
    unset($variables['content']['field_sidebar_right_paragraphs']);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function degov_common_preprocess_field(&$variables) {
  $field_name = $variables['field_name'];
  // Include the shariff sharing block buttons if social media sharing is
  // enabled on the node. Appears on the bottom of both header/content paragraph.
  if (in_array($field_name, ['field_header_paragraphs', 'field_content_paragraphs'])) {
    /* @var \Drupal\node\NodeInterface $node */
    $node = $variables['element']['#object'];

    if ($node instanceof NodeInterface && $node->hasField('field_social_media') && $node->field_social_media->value == '1') {
      $variables['items'][] = [
        'content' => [
          '#theme' => 'block_shariff',
          '#blocksettings' => [],
          '#attached' => [
            'library' => [
              'shariff/shariff',
            ],
          ],
        ],
      ];
    }
  }
}


/**
 * Implements hook_ENTITY_TYPE_view_alter() for media entities.
 *
 * @param array $build
 * @param \Drupal\media_entity\MediaInterface $entity
 * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display
 */
function degov_common_media_view_alter(array &$build, MediaInterface $entity, EntityViewDisplayInterface $display) {
  // Skip adding contextual links if the Paragraph is in a QuickEdit form context
  // to avoid causing conflicts with Quickedit JS
  if (\Drupal::routeMatch()->getRouteName() == 'quickedit.field_form') {
    return;
  }

  $build['#contextual_links']['media'] = [
    'route_parameters' => [
      'media' => $entity->id(),
    ],
    'metadata' => ['changed' => $entity->getChangedTime()],
  ];
}

/**
 * Implements hook_preprocess_HOOK() for media.html.twig.
 *
 * @see contextual_preprocess()
 * @see template_preprocess_paragraph()
 */
function degov_common_preprocess_media(&$variables) {
  // Media templates don't normally print the title_suffix, so add the
  // contextual links to the content render array.
  if (isset($variables['title_suffix']['contextual_links'])) {
    $variables['content']['contextual_links'] = $variables['title_suffix']['contextual_links'];
    $variables['content']['contextual_links']['#weight'] = -100;
  }
}

/**
 * @param $modules
 */
function degov_common_modules_installed($modules) {
  foreach ($modules as $module) {
    \Drupal::service('degov_config.block_installer')->placeBlockConfig($module);
  }
}

